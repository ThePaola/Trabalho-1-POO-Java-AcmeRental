import java.util.ArrayList;

import java.util.Scanner;

public class ACMERental {
    private Acervo acervo;
    private Locacoes locacoes;
    private Scanner entrada;

    public ACMERental() {
        acervo = new Acervo();
        locacoes = new Locacoes();
        entrada = new Scanner(System.in);
    }

    public void preCadastra() {
        Alugavel alugavel1, alugavel2, alugavel3, alugavel4;
        alugavel1 = new Alugavel(001, "Conjunto Festa", 50.00, false, false);
        acervo.adicionaAlugavel(alugavel1);
        alugavel2 = new Alugavel(002, "Smoking Festa", 500.00, true, false);
        acervo.adicionaAlugavel(alugavel2);
        alugavel3 = new Alugavel(003, "Vestido Primavera", 20.00, false, false);
        acervo.adicionaAlugavel(alugavel3);
        alugavel4 = new Alugavel(004, "Blusa Vintage Unissex", 15.00);
        acervo.adicionaAlugavel(alugavel4);

        Aluguel aluguel1, aluguel2, aluguel3, aluguel4, aluguel5;
        aluguel1 = new Aluguel("10/03", 3, "026.180.420-00", "Afrodite Olympus" , alugavel1);
        locacoes.adicionaAluguel(aluguel1);
        alugavel1.adicionaAluguel(aluguel1);
        aluguel2 = new Aluguel("20/03", 6, "026.180.420-00", "Afrodite Olympus" , alugavel2);
        locacoes.adicionaAluguel(aluguel2);
        alugavel2.adicionaAluguel(aluguel2);
        aluguel3 = new Aluguel("05/03", 2, "987.654.321-00", "Artemis Olympus" , alugavel3);
        locacoes.adicionaAluguel(aluguel3);
        alugavel3.adicionaAluguel(aluguel3);
        aluguel4 = new Aluguel("06/03", 8, "111.222.333-00", "Persefone Olympus" , alugavel3);
        locacoes.adicionaAluguel(aluguel4);
        alugavel3.adicionaAluguel(aluguel4);
        aluguel5 = new Aluguel("03/03", 5, "333.222.111-00", "Hera Olympus" , alugavel3);
        locacoes.adicionaAluguel(aluguel5);
        alugavel3.adicionaAluguel(aluguel5);
    }

    public void executa() {
        int opcao;
        do {
            menu();
            opcao = entrada.nextInt();
            entrada.nextLine();
            switch(opcao) {
                case 0:
                    preCadastra();
                    break;
                case 1:
                    mostrarDados();
                    break;
                case 2:
                    pesquisarAlugavelCodigo();
                    break;
                case 3:
                    pesquisarAlugavelNome();
                    break;
                case 4:
                    pesquisarAluguelCliente();
                    break;
                case 5:
                    CadastroPorCliente();
                    break;
                case 6:
                    System.exit(5);
                    break;
                default:
                    System.out.println("Opcao invalida.");
                    break;
            }
        }
        while(opcao != 0);
    }

    private void menu() {
        System.out.println("=============================");
        System.out.println("Opcoes:");
        System.out.println("[1] Mostrar dados cadastrados");
        System.out.println("[2] Pesquisar item alugável (código)");
        System.out.println("[3] Pesquisar item alugável (nome)");
        System.out.println("[4] Pesquisar aluguéis por cliente");
        System.out.println("[5] Cadastrar novo aluguel");
        System.out.println("[6] Sair do sistema");
        System.out.println("Opcao desejada: ");
    }

    private void mostrarDados() {
        ArrayList<Alugavel> alugaveis = acervo.getListaAlugaveis();
        if (alugaveis.size() == 0) {
            System.out.println("Não exitem itens alugáveis cadastrados no sistema.");
        }
        for (int i=0; i<acervo.getListaAlugaveis().size(); i++) {
            Alugavel alugavel = acervo.getListaAlugaveis().get(i);
            System.out.println(alugavel.toString());
            
            System.out.println(alugavel.getCadastroAlugavel());
            System.out.println("===================================================");
    }
}

    private void pesquisarAlugavelCodigo() {
        System.out.println("Por favor, insira o codigo do item alugavel: ");
        int codigo = entrada.nextInt();
        entrada.nextLine();
        Alugavel alugavel = acervo.pesquisaAlugavel(codigo);
        if(alugavel == null) {
            System.out.println("Não existe alugável com esse código.");
        }
        else {
            System.out.println("Nome: " + alugavel.getNomeAlugavel() + " || Código: " + alugavel.getCodigo() + " || Preço Diário: " + alugavel.getPrecoDiario() + " || Masculino(T)/Feminino(F): " + alugavel.getMasculinoFeminino() + " || Vestido de Casamento: " + alugavel.getVestidoCasamento());
        }
        for(int i = 0; i<locacoes.pesquisaAluguelCodigo(codigo).size(); i++) {
            Aluguel aluguel = locacoes.pesquisaAluguelCodigo(codigo).get(i);
            System.out.println(aluguel.toString());
        }
    }

    private void pesquisarAlugavelNome() {
        System.out.println("Por favor, insira o nome do item alugável:");
        String nome = entrada.nextLine();
        ArrayList<Alugavel> alugavel = acervo.pesquisaAlugavel(nome);
            if(alugavel == null) {
                System.out.println("Não existe alugável com esse nome.");
        }
        else {
            for(int i = 0; i < alugavel.size(); i++) {
                System.out.println("Alugavel: " + alugavel.get(i).getNomeAlugavel() + " || Código: " + alugavel.get(i).getCodigo() + " || Preço Diário: " + alugavel.get(i).getPrecoDiario() + " || Masculino(T)/Feminino(F): " + alugavel.get(i).getMasculinoFeminino() + " || Vestido de Casamento: " + alugavel.get(i).getVestidoCasamento());
            }
      }
      for(int i = 0; i<locacoes.pesquisaAluguelNome(nome).size(); i++) {
        Aluguel aluguel = locacoes.pesquisaAluguelNome(nome).get(i);
        System.out.println(aluguel.toString());
   }
}
    private void pesquisarAluguelCliente() {
        System.out.println("Por favor, insira o CPF do cliente para encontrar seus aluguéis: ");
        String cpf = entrada.nextLine();
        if(locacoes.pesquisaAluguel(cpf) == null) {
            System.out.println("Nenhum cadastro encontrado.");
        }
        else {
            for(int i = 0; i < locacoes.pesquisaAluguel(cpf).size(); i++) {
                Aluguel aluguel = locacoes.pesquisaAluguel(cpf).get(i);
                System.out.println(aluguel.toString());                
                Alugavel alugavel = aluguel.getAlugavel();
                if(alugavel != null) {
                    System.out.println(alugavel.toString());
                }
           }
        }
 }

    private void CadastroPorCliente() {
        System.out.println("Por favor, insira a data do aluguel: ");
        String data = entrada.nextLine();
        System.out.println("Por favor, insira o periodo do aluguel: ");
        int periodo = entrada.nextInt();
        System.out.println("Por favor, insira seu CPF: ");
        String cpf = entrada.nextLine();
        System.out.println("Por favor, insira seu nome completo: ");
        String nome = entrada.nextLine();
        System.out.println("Por favor, insira o codigo do item que deseja alugar: ");
        int codigo = entrada.nextInt();
        Aluguel aluguel6 = new Aluguel(data, periodo, cpf, nome, acervo.pesquisaAlugavel(codigo));
        locacoes.adicionaAluguel(aluguel6);
        System.out.println("Item cadastrado com sucesso!");

 }
}
